{"version":3,"sources":["MyObject.ts","hexagon.ts","index.ts"],"names":[],"mappings":"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","file":"src.77de5100.map","sourceRoot":"../src","sourcesContent":["export class MyObject {\n  vbo: WebGLRenderbuffer | null;\n  ibo: WebGLRenderbuffer | null;\n  count: number;\n  gl: WebGLRenderingContext;\n  constructor(\n    gl: WebGLRenderingContext,\n    vertices: number[][],\n    indices: number[][]\n  ) {\n    const flatten_vertices = flatten(vertices);\n    const flatten_indices = flatten(indices);\n\n    const vbo = gl.createBuffer();\n    const ibo = gl.createBuffer();\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, vbo);\n    gl.bufferData(\n      gl.ARRAY_BUFFER,\n      new Float32Array(flatten_vertices),\n      gl.STATIC_DRAW\n    );\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, ibo);\n    gl.bufferData(\n      gl.ELEMENT_ARRAY_BUFFER,\n      new Int16Array(flatten_indices),\n      gl.STATIC_DRAW\n    );\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n\n    this.vbo = vbo;\n    this.ibo = ibo;\n    this.count = flatten_indices.length;\n    this.gl = gl;\n  }\n\n  bind() {\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vbo);\n    this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.ibo);\n  }\n\n  draw() {\n    this.bind()\n    this.gl.drawElements(this.gl.TRIANGLES, this.count, this.gl.UNSIGNED_SHORT, 0);\n  }\n}\n\nfunction flatten(arr: any[][]): any[] {\n  return arr.reduce((acc, x) => acc.concat(x));\n}\n","import { MyObject } from \"./MyObject\";\n\nexport function getHexagon(\n  gl: WebGLRenderingContext,\n  length: number\n): MyObject {\n  return new MyObject(gl, getVertices(length), getIndicese(length))\n}\n\nfunction getVertices(length: number): number[][] {\n  const th = 1.0 / length;\n  const tw2 = th / Math.sqrt(3);\n  const tw = tw2 * 2;\n\n  const arr = [];\n  for (let i = -length; i <= length; i++) {\n    const absi = Math.abs(i);\n\n    const y = th * i;\n    let x = tw2 * absi - 2.0 / Math.sqrt(3);\n    const n = length * 2 + 1 - absi;\n\n    for (let j = 0; j < n; j++) {\n      arr.push([x, y]);\n      x += tw;\n    }\n  }\n\n  return arr;\n}\n\nfunction triangles(top: number, bottom: number, n: number): number[][] {\n  let t = top;\n  let b = bottom;\n  const arr = [];\n\n  for (var i = 0; i < n; i++) {\n    arr.push([t, b, b + 1]);\n    t++;\n    b++;\n  }\n\n  return arr;\n}\n\nfunction getIndicese(length: number): number[][] {\n  let index = 0;\n  let num_triangles = length;\n  let arr: number[][] = [];\n\n  for (let i = 0; i < length; i++) {\n    const next_index = index + length + i + 1;\n    arr = arr.concat(triangles(next_index + 1, index, num_triangles++));\n    arr = arr.concat(triangles(index, next_index, num_triangles));\n    index = next_index;\n  }\n\n  for (let i = 0; i < length; i++) {\n    const next_index = index + 2 * length - i + 1;\n    arr = arr.concat(triangles(next_index, index, num_triangles--));\n    arr = arr.concat(triangles(index + 1, next_index, num_triangles));\n    index = next_index;\n  }\n\n  return arr;\n}\n","import { getHexagon } from \"./hexagon\";\n\nimport imageURL from \"./assets/images/theta360me.jpg\";\n\nvar gl: WebGLRenderingContext;\n\nwindow.onload = () => {\n  const c = document.getElementById(\"webgl\") as HTMLCanvasElement;\n\n  const width = c.width;\n  const height = c.height;\n\n  const _gl = c.getContext(\"webgl\");\n  if (!_gl) {\n    alert(\"ERROR: WebGL API is not available\");\n    return;\n  }\n\n  gl = _gl as WebGLRenderingContext;\n  if (!gl.getExtension(\"OES_standard_derivatives\")) {\n    alert(\"ERROR: Extension 'OES_standard_derivatives' was not found\");\n  }\n  glInit(width, height);\n\n  const vs = `\n    #define M_PI_INV 0.3183098861837907\n    #define M_PI_INV_HALF 0.15915494309189535\n\n    attribute vec2 xy;\n    varying float u1, u2, v, r;\n\n    void main(void) {\n      float z2 = 1.0 - dot(xy, xy);\n      float mask = step(0.0, z2);\n      float z = sqrt(z2 * mask);\n      vec3 normal = vec3(xy, z);\n      vec3 view = vec3(0.0, 0.0, 1.0);\n      vec3 light = normal * (2.0 * z) - view;\n      v = acos(light.y) * M_PI_INV;\n      u1 = atan(light.x, light.z) * M_PI_INV_HALF;\n      if(u1 > 0.0) {\n        u2 = u1;\n      } else {\n        u2 = u1 + 1.0;\n      }\n      gl_Position = vec4(xy, 0.0, 1.0);\n      r = mask;\n    }`;\n  const fs = `#extension GL_OES_standard_derivatives : enable\n    precision mediump float;\n    uniform sampler2D texture;\n    varying float u1, u2, v, r;\n\n    void main(void) {\n      float u;\n      if(fwidth(u1) <= fwidth(u2)) {\n        u = u1;\n      } else {\n        u = u2;\n      }\n      vec2 uv = vec2(u, v);\n      vec4 smpColor = texture2D(texture, uv);\n      vec3 vColor = smpColor.xyz * r;\n      gl_FragColor = vec4(vColor, 1.0);\n  }`;\n  const _program = create_program(vs, fs);\n  if (!_program) {\n    console.log(\"ERROR: failed to create a program.\");\n    return;\n  }\n\n  const program = _program as WebGLProgram;\n  const location_xy = gl.getAttribLocation(program, \"xy\");\n  gl.enableVertexAttribArray(location_xy);\n\n  const hexagon = getHexagon(gl, 16);\n  hexagon.bind();\n  gl.vertexAttribPointer(location_xy, 2, gl.FLOAT, false, 0, 0);\n\n  const location_t = gl.getUniformLocation(program, \"texture\");\n  const updateTexture = init_texture(location_t as WebGLUniformLocation);\n  updateTexture(imageURL);\n\n  setInterval(() => {\n    hexagon.draw();\n    gl.flush();\n  }, 1000);\n\n  console.log(\"DONE.\");\n};\n\nfunction glInit(width: number, height: number) {\n  gl.viewport(0, 0, width, height);\n  gl.clearColor(0.0, 0.0, 0.0, 1.0);\n  gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n}\n\nfunction create_program(vs: string, fs: string): WebGLProgram | null {\n  const _program = gl.createProgram();\n  if (!_program) {\n    return null;\n  }\n\n  const program = _program as WebGLProgram;\n  gl.attachShader(program, create_shader(vs, gl.VERTEX_SHADER) as WebGLShader);\n  gl.attachShader(program, create_shader(\n    fs,\n    gl.FRAGMENT_SHADER\n  ) as WebGLShader);\n  gl.linkProgram(program);\n\n  if (gl.getProgramParameter(program, gl.LINK_STATUS)) {\n    gl.useProgram(program);\n    return program;\n  } else {\n    alert(gl.getProgramInfoLog(program));\n    return null;\n  }\n}\n\nfunction create_shader(code: string, shader_type: number): WebGLShader | null {\n  const _shader = gl.createShader(shader_type);\n  if (!_shader) {\n    return null;\n  }\n\n  const shader = _shader as WebGLShader;\n  gl.shaderSource(shader, code);\n  gl.compileShader(shader);\n\n  if (gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n    return shader;\n  } else {\n    alert(gl.getShaderInfoLog(shader));\n    return null;\n  }\n}\n\nfunction init_texture(location: WebGLUniformLocation) {\n  const texture = gl.createTexture();\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n\n  // Because images have to be download over the internet\n  // they might take a moment until they are ready.\n  // Until then put a single pixel in the texture so we can\n  // use it immediately. When the image has finished downloading\n  // we'll update the texture with the contents of the image.\n  const level = 0;\n  const internalFormat = gl.RGB;\n  const width = 1;\n  const height = 1;\n  const border = 0;\n  const srcFormat = internalFormat;\n  const srcType = gl.UNSIGNED_BYTE;\n  const pixel = new Uint8Array([0, 0, 255]); // opaque blue\n  gl.texImage2D(\n    gl.TEXTURE_2D,\n    level,\n    internalFormat,\n    width,\n    height,\n    border,\n    srcFormat,\n    srcType,\n    pixel\n  );\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.MIRRORED_REPEAT);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n\n  gl.uniform1i(location, 0);\n\n  return (imgSrc: string) => {\n    const img = new Image();\n\n    img.onload = function() {\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        srcFormat,\n        srcType,\n        img\n      );\n    };\n    img.src = imgSrc;\n  };\n}\n"]}